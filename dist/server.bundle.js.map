{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/server/config/keys.js","webpack:///./src/server/errors/HttpError.js","webpack:///./src/server/models/session.js","webpack:///./src/server/models/user.js","webpack:///./src/server/routes/api/user-routes.js","webpack:///./src/server/routes/controller/user-controller.js","webpack:///./src/server/routes/services/messages-service.js","webpack:///./src/server/routes/services/session-service.js","webpack:///./src/server/routes/services/user-service.js","webpack:///./src/server/server.js","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"express\"","webpack:///external \"express-session\"","webpack:///external \"express-validator\"","webpack:///external \"mongoose\"","webpack:///external \"passport\"","webpack:///external \"path\""],"names":["module","exports","mongoURI","HttpError","statusCode","params","Error","captureStackTrace","mongoose","require","SessionSchema","Schema","userId","type","String","index","Session","model","create","id","session","save","bcrypt","UserSchema","username","password","email","name","User","createUser","newUser","generatePassword","genSalt","salt","hash","getUserByProperty","property","findOne","comparePassword","compare","express","router","Router","UserController","post","req","res","register","get","retrieveUser","update","delete","deleteAccount","validate","login","logout","UserService","SessionService","MessageService","errors","getUserByEmail","body","form","push","param","msg","EMAIL_406","getUserByUsername","USERNAME_406","length","registerUser","user","createSession","_id","status","json","getSession","SESSION_404","getUserById","USER_404","removePrivate","validateUser","error","deleteSession","deleteUser","updateUser","updatedUser","validatePassword","LOGIN_401","findById","session_id","findByIdAndDelete","newUsername","newPassword","newEmail","newName","findOneAndUpdate","new","user_id","path","cookieParser","bodyParser","expressValidator","passport","db","connect","useNewUrlParser","then","console","log","catch","err","userRoutes","app","use","urlencoded","extended","static","join","__dirname","secret","saveUnitialized","resave","initialize","errorFormatter","value","namespace","split","root","shift","formParam","set","process","env","PORT","listen"],"mappings":"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","file":"./dist/server.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server/server.js\");\n","module.exports = {    \r\n    mongoURI:'mongodb://lljruffin:password1@ds050077.mlab.com:50077/league_builds',\r\n}","class HttpError extends Error {\r\n    constructor(statusCode, ...params) {\r\n        super(...params);\r\n        \r\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, HttpError);\r\n        }\r\n\r\n        this.statusCode = statusCode;\r\n    }    \r\n}\r\n\r\nmodule.exports = HttpError;","const mongoose = require('mongoose');\r\n\r\nconst SessionSchema = mongoose.Schema({\r\n    userId : {\r\n        type: String,\r\n        index: true\r\n    },\r\n});\r\n\r\nconst Session = module.exports = mongoose.model('Session', SessionSchema);\r\n\r\nmodule.exports.create = async (id) => {\r\n    const session = new Session({userId: id});\r\n    return await session.save();\r\n}","const mongoose = require('mongoose');\r\nconst bcrypt = require('bcryptjs');\r\n\r\nconst UserSchema = mongoose.Schema({\r\n    username: {\r\n        type: String,\r\n        index: true\r\n    },\r\n    password: {\r\n        type: String\r\n    },\r\n    email: {\r\n        type: String\r\n    },\r\n    name: {\r\n        type: String\r\n    },\r\n    \r\n});\r\n\r\nconst User = module.exports = mongoose.model('User', UserSchema);\r\n\r\nmodule.exports.createUser = async (newUser) => {\r\n    newUser.password = await User.generatePassword(newUser.password);\r\n    return await newUser.save();\r\n};\r\n\r\nmodule.exports.generatePassword = async (password) => {\r\n    const salt = await bcrypt.genSalt(10);\r\n    return await bcrypt.hash(password, salt);\r\n};\r\n\r\nmodule.exports.getUserByProperty = async (property) => {\r\n    return await User.findOne(property);\r\n};\r\n\r\nmodule.exports.comparePassword = async (password, hash) => {\r\n    return await bcrypt.compare(password, hash);\r\n}","const express = require('express');\r\nconst router = express.Router();\r\nconst UserController = require('../controller/user-controller');\r\n\r\nrouter.post('/register', (req, res) => {\r\n    UserController.register(req, res);\r\n});\r\n\r\n// retrieve user\r\nrouter.get('/session/:id', (req, res) => {\r\n    UserController.retrieveUser(req, res);\r\n});\r\n\r\n// update user\r\nrouter.post(\"/update/:id\", (req, res) => {\r\n    UserController.update(req, res);\r\n});\r\n\r\n// delete user\r\nrouter.delete('/delete/:id', (req, res) => {    \r\n    UserController.deleteAccount(req, res);\r\n});\r\n\r\n// confirm password\r\nrouter.post(\"/validate\", (req, res) => {\r\n    UserController.validate(req, res);\r\n});\r\n\r\nrouter.post('/login', (req, res) => {\r\n    UserController.login(req, res);\r\n});\r\n        \r\n\r\nrouter.delete('/logout/:id', (req, res) => {\r\n    UserController.logout(req, res);\r\n});\r\n\r\nmodule.exports = router;","const UserService = require('../services/user-service');\r\nconst SessionService = require('../services/session-service');\r\nconst MessageService = require('../services/messages-service');\r\nconst HttpError = require('../../errors/HttpError');\r\n\r\nconst UserController = function () {\r\n    let register = async (req, res) => {\r\n        try {\r\n            let errors = [];\r\n            if (await UserService.getUserByEmail(req.body.form.email))\r\n                errors.push({\r\n                    param: 'email',\r\n                    msg: MessageService.EMAIL_406\r\n                });\r\n            if (await UserService.getUserByUsername(req.body.form.username))\r\n                errors.push({\r\n                    param: 'username',\r\n                    msg: MessageService.USERNAME_406\r\n                });\r\n            if (errors.length > 0)\r\n                throw new HttpError(406, errors);\r\n\r\n            const user = await UserService.registerUser(req.body.form);\r\n            const session = await SessionService.createSession(user._id);\r\n\r\n            res.status(201).json({ session: session._id });\r\n        } catch (ex) {\r\n            res.status(ex.statusCode || 500).json({ errors: ex.msg });\r\n        }\r\n    };\r\n\r\n    let retrieveUser = async (req, res) => {\r\n        try {\r\n            const session = await SessionService.getSession(req.params.id);\r\n            if (!session)\r\n                throw new HttpError(404, MessageService.SESSION_404);\r\n\r\n            let user = await UserService.getUserById(session.userId);\r\n            if (!user)\r\n                throw new HttpError(404, MessageService.USER_404);\r\n\r\n            res.status(200).json({ user: UserService.removePrivate(user) });\r\n        }\r\n        catch (ex) {\r\n            res.status(ex.statusCode || 500).json({ errors: ex.msg });\r\n        }\r\n    };\r\n\r\n    let login = async (req, res) => {\r\n        try {\r\n            const user = await validateUser(req);\r\n            const session = await SessionService.createSession(user._id);\r\n            res.status(201).json({ session: session._id });\r\n        } catch (ex) {\r\n            res.status(ex.statusCode || 500).json({ error: ex.msg });\r\n        }\r\n    }\r\n\r\n    let logout = async (req, res) => {\r\n        try {\r\n            if (!(await SessionService.deleteSession(req.params.id)))\r\n                throw new HttpError(404, MessageService.SESSION_404);\r\n\r\n            res.status(200).json({});\r\n        } catch (ex) {\r\n            res.status(ex.statusCode || 500).json({ error: ex.msg });\r\n        }\r\n    }\r\n\r\n    let deleteAccount = async (req, res) => {\r\n        try {\r\n            const user = await validateUser(req);\r\n            if (!(await SessionService.deleteSession(req.params.id)))\r\n                throw new HttpError(404, MessageService.SESSION_404);\r\n            if (!(await UserService.deleteUser(user._id)))\r\n                throw new HttpError(404, MessageService.USER_404);\r\n\r\n            res.status(200).json({});\r\n        } catch (ex) {\r\n            res.status(ex.statusCode || 500).json({ errors: ex.msg });\r\n        }\r\n    }\r\n\r\n    let update = async (req, res) => {\r\n        try {\r\n            const user = await validateUser(req);\r\n            const updatedUser = await UserService.updateUser(user, req.body.form);\r\n\r\n            res.status(200).json({ user: UserService.removePrivate(updatedUser) });\r\n        } catch (ex) {\r\n            res.status(ex.statusCode || 500).json({ error: ex.msg });\r\n        }\r\n    };\r\n\r\n    let validate = async (req, res) => {\r\n        try {\r\n            await validateUser(req);\r\n            res.status(200).json({});\r\n        } catch (ex) {\r\n            res.status(ex.statusCode || 500).json({ error: ex.msg });\r\n        }\r\n    };\r\n\r\n    let validateUser = async (req) => {\r\n        const user = await UserService.getUserByUsername(req.body.form.username);\r\n        if (!(user && (await UserService.validatePassword(user, req.body.form.password))))\r\n            throw new HttpError(401, MessageService.LOGIN_401);\r\n        return user;\r\n    };\r\n\r\n    return {\r\n        register: register,\r\n        login: login,\r\n        logout: logout,\r\n        retrieveUser: retrieveUser,\r\n        deleteAccount: deleteAccount,\r\n        update: update,\r\n        validate: validate,\r\n    }\r\n}();\r\n\r\nmodule.exports = UserController;","const MessageService = function() {\r\n    return {\r\n        EMAIL_406: 'Email is already in use',\r\n        USERNAME_406: 'Username is already in use',\r\n        SESSION_404: 'You are not logged in',\r\n        USER_404: 'This user does not exist',\r\n        LOGIN_401: 'Invalid username/password'\r\n    };\r\n}();\r\n\r\nmodule.exports = MessageService;","const Session = require('../../models/session');\r\n\r\nconst SessionService = function () {\r\n    const getSession = async (id) => {\r\n        return await Session.findById(id);\r\n    };\r\n\r\n    const deleteSession = async (session_id) => {\r\n        return await Session.findByIdAndDelete(session_id);\r\n    }\r\n\r\n    const createSession = async (userId) => {\r\n        return await Session.create(userId);\r\n    }\r\n\r\n    return {\r\n        getSession: getSession,\r\n        deleteSession: deleteSession,\r\n        createSession: createSession\r\n    }\r\n}();\r\n\r\nmodule.exports = SessionService;","const User = require('../../models/user');\r\n\r\nconst UserService = function () {\r\n    let getUserByUsername = async (username) => {\r\n        return await User.getUserByProperty({ username: username });\r\n    }\r\n\r\n    let getUserByEmail = async (email) => {\r\n        return await User.getUserByProperty({ email: email });\r\n    }\r\n\r\n    let registerUser = async (form) => {        \r\n        return await User.createUser(new User({\r\n            username: form.username,\r\n            password: form.password,\r\n            email: form.email,\r\n            name: form.name\r\n        }));\r\n    }\r\n\r\n    let validatePassword = async (user, password) => {\r\n        return await User.comparePassword(password, user.password);\r\n    }\r\n\r\n    let updateUser = async (user, form) => {\r\n        if (form.newUsername)\r\n            user.username = form.newUsername;\r\n        if (form.newPassword)\r\n            user.password = await User.generatePassword(form.newPassword);\r\n        if (form.newEmail)\r\n            user.email = form.newEmail;\r\n        if (form.newName)\r\n            user.name = form.newName;\r\n\r\n        return await User.findOneAndUpdate({ _id: user._id }, user, { new: true })\r\n    };\r\n\r\n    let removePrivate = (user) => {\r\n        return {\r\n            username: user.username,\r\n            email: user.email,\r\n            name: user.name,\r\n        };\r\n    }\r\n\r\n    let getUserById = async (id) => {\r\n        return await User.findById(id);\r\n    }\r\n\r\n    let deleteUser = async (user_id) => {\r\n        return await User.findByIdAndDelete(user_id);\r\n    };\r\n\r\n    return {\r\n        getUserById: getUserById,\r\n        getUserByUsername: getUserByUsername,\r\n        getUserByEmail: getUserByEmail,\r\n        registerUser: registerUser,\r\n        deleteUser: deleteUser,\r\n        updateUser: updateUser,\r\n        removePrivate: removePrivate,\r\n        validatePassword: validatePassword,\r\n    }\r\n}();\r\n\r\nmodule.exports = UserService;","const express = require('express');\r\nconst path = require('path');\r\nconst cookieParser = require('cookie-parser');\r\nconst bodyParser = require('body-parser');\r\nconst expressValidator = require('express-validator');\r\nconst session = require('express-session');\r\nconst passport = require('passport');\r\nconst mongoose = require('mongoose');\r\nconst db = require('./config/keys').mongoURI;\r\n\r\n// connect to mongo using mongoose\r\nmongoose.connect(db, { useNewUrlParser: true })\r\n    .then(() => console.log('MongoDb connected...'))\r\n    .catch(err => console.log(err));\r\n\r\nconst userRoutes = require('./routes/api/user-routes');\r\n\r\n// declare express\r\nconst app = express();\r\n\r\n// body parser middleware\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\n\r\n// set static folder\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n// express session\r\napp.use(session({\r\n    secret: 'secret',\r\n    saveUnitialized: true,\r\n    resave: true\r\n}))\r\n\r\n// passport init\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\n// express validator, taken from github\r\napp.use(expressValidator({\r\n    errorFormatter: (param, msg, value) => {\r\n        const namespace = param.split('.'),\r\n            root = namespace.shift(0),\r\n            formParam = root;\r\n\r\n        while (namespace.length) {\r\n            formParam += '[' + namespace.shift() + ']';\r\n        }\r\n\r\n        return {\r\n            param: formParam,\r\n            msg: msg,\r\n            value: value\r\n        };\r\n    }\r\n}));\r\n\r\n// routes \r\napp.use('/user', userRoutes);\r\n\r\n// lset up port\r\napp.set('port', (process.env.PORT || 8000));\r\napp.listen(app.get('port'), () => {\r\n    console.log(`Server started on port ${app.get('port')}`);\r\n})","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"express\");","module.exports = require(\"express-session\");","module.exports = require(\"express-validator\");","module.exports = require(\"mongoose\");","module.exports = require(\"passport\");","module.exports = require(\"path\");"],"sourceRoot":""}